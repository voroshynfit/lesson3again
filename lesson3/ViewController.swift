//
//  ViewController.swift
//  lesson3
//
//  Created by sebastian on 15.08.24.
//

import UIKit

class ViewController: UIViewController {

    override func viewDidLoad() {
        super.viewDidLoad()
        
        //    –ó–∞–¥–∞–Ω–∏—è:
        //    ‚ùáÔ∏è –ú–∞—Å—Å–∏–≤—ã
        //    üí¨ –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–æ–ª—å–∫–æ —Ñ—É–Ω–∫—Ü–∏–∏ –≤—ã—Å—à–µ–≥–æ –ø–æ—Ä—è–¥–∫–∞.
        //
        //    ‚≠ïÔ∏è –°–æ–∑–¥–∞—Ç—å –º–∞—Å—Å–∏–≤ —Å 10 —á–∏—Å–ª–∞–º–∏ —Ç–∏–ø–∞ Int, –∫–æ—Ç–æ—Ä—ã–µ —Ä–∞–Ω–¥–æ–º–Ω–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω—ã –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ 1-100
        
        
        var array: [Int] = []
        for item in 1...10 {
            array.append(Int.random(in: 1...100))
        }
        
        //        –ü—Ä–æ–π—Ç–∏—Å—å –ø–æ –º–∞—Å—Å–∏–≤—É –∏ –≤—ã–≤–µ—Å—Ç–∏ –≤ —Å—Ç—Ä–æ–∫–µ –∫–∞–∂–¥—ã–π —ç–ª–µ–º–µ–Ω—Ç, –Ω–∞–ø—Ä–∏–º–µ—Ä "–ú–Ω–µ X –ª–µ—Ç"
        array.forEach { item in print("–ú–Ω–µ \(item) –ª–µ—Ç") }
        
        //        –ò–∑ –º–∞—Å—Å–∏–≤–∞ —Å —á–∏—Å–ª–∞–º–∏ –ø–æ–ª—É—á–∏—Ç—å –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤, –∫–æ—Ç–æ—Ä—ã–π —Å–æ–¥–µ—Ä–∂–∏—Ç —Ç–æ–ª—å–∫–æ —Å–æ–≤–µ—Ä—à–µ–Ω–Ω–æ–ª–µ—Ç–Ω–∏–π –≤–æ–∑—Ä–∞—Å—Ç ( > 18).
        var adult = array.filter { $0 > 18 }
        print(adult)
        
        //        –ò–∑ —ç—Ç–æ–≥–æ –º–∞—Å—Å–∏–≤–∞ —É–¥–∞–ª–∏—Ç—å –ø–µ–Ω—Å–∏–æ–Ω–µ—Ä–æ–≤ ( < 60)
        
        adult = adult.filter { $0 < 60 }
        print(adult)
        
        //        –í—ã–≤–µ—Å—Ç–∏ –≤ —Å—Ç—Ä–æ–∫–µ –∫–∞–∂–¥—ã–π —ç–ª–µ–º–µ–Ω—Ç –º–∞—Å—Å–∏–≤–∞,  –Ω–∞–ø—Ä–∏–º–µ—Ä "–ú–Ω–µ –• –ª–µ—Ç, —è –Ω–∏ –º–æ–ª–æ–¥–æ–π –Ω–∏ —Å—Ç–∞—Ä—ã–π
        
        adult.forEach { item in print("–ú–Ω–µ \(item) –ª–µ—Ç, —è –Ω–∏ –º–æ–ª–æ–¥–æ–π –Ω–∏ —Å—Ç–∞—Ä—ã–π") }
        //        –ü–æ–ª—É—á–∏—Ç—å –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤ —Å —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏ –∏–∑ –ø–µ—Ä–≤–æ–≥–æ –º–∞—Å—Å–∏–≤–∞, –∫–æ—Ç–æ—Ä—ã–µ –º–µ–Ω—å—à–µ —Å—Ä–µ–¥–Ω–µ–≥–æ –∞—Ä–∏—Ñ–º–µ—Ç–∏—á–µ—Å–∫–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —ç—Ç–æ–≥–æ –∂–µ –º–∞—Å—Å–∏–≤–∞.
        
        let arrayArithmeticMean = array.filter { $0 < array.reduce(0) { $0 + $1 } / array.count }
        print(arrayArithmeticMean)
        
        //        –°–æ–∑–¥–∞—Ç—å —Å–ª–æ–≤–∞—Ä—å, –≥–¥–µ –∫–ª—é—á - –Ω–∞–∑–≤–∞–Ω–∏–µ —à–∫–æ–ª—å–Ω–æ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–∞, –∞ –∑–Ω–∞—á–µ–Ω–∏–µ - —Å—Ä–µ–¥–Ω–µ–≥–æ–¥–æ–≤–∞—è –æ—Ç–º–µ—Ç–∫–∞ –∏ –º–∞—Å—Å–∏–≤ –æ—Ç–º–µ—Ç–æ–∫ –ø–æ —á–µ—Ç–≤–µ—Ä—Ç—è–º (–∏—Å–ø. –∫–æ—Ä—Ç–µ–∂–∏).
        //        üí¨ –ü—Ä–µ–¥–º–µ—Ç–æ–≤ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å 10
        
        let subject =
        [
            "Math": (findTheAverageAnnual(createRandomMarksDb()), createRandomMarksInt())
            ,
            
            "–°hemistry": (findTheAverageAnnual(createRandomMarksDb()), createRandomMarksInt())
            ,
            
            "Biology": (findTheAverageAnnual(createRandomMarksDb()), createRandomMarksInt())
            ,
            
            "Pe": (findTheAverageAnnual(createRandomMarksDb()), createRandomMarksInt())
            ,
            
            "History": (findTheAverageAnnual(createRandomMarksDb()), createRandomMarksInt())
            ,
            
            "Training": (findTheAverageAnnual(createRandomMarksDb()), createRandomMarksInt())
            ,
            
            "Physics": (findTheAverageAnnual(createRandomMarksDb()), createRandomMarksInt())
            ,
            
            "Geometry": (findTheAverageAnnual(createRandomMarksDb()), createRandomMarksInt())
            ,
            
            "Algebra": (findTheAverageAnnual(createRandomMarksDb()), createRandomMarksInt())
            ,
            
            "Work": (findTheAverageAnnual(createRandomMarksDb()), createRandomMarksInt())
        ]
        
        //        –ü—Ä–æ–π—Ç–∏—Å—å –ø–æ —Å–ª–æ–≤–∞—Ä—é –∏ –≤—ã–≤–µ—Å—Ç–∏ –ø–æ–ª–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ –∫–∞–∂–¥–æ–º—É –ø—Ä–µ–¥–º–µ—Ç—É.
        //       üí¨ –ù–∞–∑–≤–∞–Ω–∏–µ, –≥–æ–¥–æ–≤–∞—è, –æ—Ü–µ–Ω–∫–∏ –ø–æ —á–µ—Ç–≤–µ—Ä—Ç—è–º
        
        subject.forEach { key, value in
            print("–ù–∞–∑–≤–∞–Ω–∏–µ: \(key), –≥–æ–¥–æ–≤–∞—è: \(value.0), –æ—Ü–µ–Ω–∫–∏ –ø–æ —á–µ—Ç–≤–µ—Ä—Ç—è–º: \(value.1)")
        }
        
        //        –ü–æ—Å—á–∏—Ç–∞–π—Ç–µ –∏ –≤—ã–≤–µ–¥–∏—Ç–µ –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ç–º–µ—Ç–æ–∫ –∑–∞ –≥–æ–¥.
        //        üí¨ –ì–æ–¥–æ–≤—ã–µ –Ω–µ —Å—á–∏—Ç–∞—é—Ç—Å—è
        
        // —á–µ—Ä–µ–∑ —Ñ—É–Ω–∫—Ü–∏—é –≤—ã—Å—à–µ–≥–æ –ø–æ—Ä—è–¥–∫–∞ —Å–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ –∑–¥–µ—Å—å –Ω–µ –ø–æ–ª—É—á–∏—Ç—Å—è
        
        var marks = [Int]()
        for (kind, item) in subject {
            for item in item.1 {
                marks.append(item)
            }
        }
        print(" –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ç–º–µ—Ç–æ–∫ –∑–∞ –≥–æ–¥: \(marks.count)")
    }
    func createRandomMarksDb() -> [Double] {
        var array: [Double] = []
        for item in 1...4 {
            array.append(Double.random(in: 1...10).rounded(.toNearestOrAwayFromZero))
        }
        return array
    }
    
    func createRandomMarksInt() -> [Int] {
        var array: [Int] = []
        for item in 1...4 {
            array.append(Int.random(in: 1...10))
        }
        return array
    }
    
    func findTheAverageAnnual(_ marks: [Double]) -> Double {
            let average = marks.reduce(0) { $0 + $1 } / Double(marks.count)
        return average
    }
}
